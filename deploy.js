const ethers = require('ethers');
const fs = require('fs-extra')
require('dotenv').config();

async function main(){
    const options = {
     
        "gasLimit": 5000000
    }
    const provider = new ethers.JsonRpcProvider(process.env.RPC_SERVER);
    const wallet = new ethers.Wallet(process.env.PRIVATE_KEY, provider);

    const abi = fs.readFileSync('./SimpleStorage_sol_SimpleStorage.abi', 'utf-8');
    const bin = fs.readFileSync('./SimpleStorage_sol_SimpleStorage.bin', 'utf-8');

    const contractFactory = new ethers.ContractFactory(abi, bin, wallet);
    console.log('deploying');
    const contract = await contractFactory.deploy(options);
    console.log('contract');
    console.log(contract);
    const transactionReciept = await contract.deploymentTransaction().wait(1);
    console.log('transaction reciept');
    console.log(transactionReciept);
    
    const tx = {
        nonce: 52,
        gasPrice: 2000000,
        gasLimit: 20000,
        to: null,
        value: 0,
        data: "0x608060405234801561001057600080fd5b50610842806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632e64cec11461005c5780636057361d1461007a578063795fff1d1461009657806384184133146100b25780639e7a13ad146100d0575b600080fd5b610064610101565b6040516100719190610255565b60405180910390f35b610094600480360381019061008f91906102b0565b61010a565b005b6100b060048036038101906100ab9190610423565b610114565b005b6100ba61017a565b6040516100c79190610255565b60405180910390f35b6100ea60048036038101906100e591906102b0565b610180565b6040516100f89291906104fe565b60405180910390f35b60008054905090565b8060008190555050565b60016040518060400160405280838152602001848152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001019081610173919061073a565b5050505050565b60005481565b6001818154811061019057600080fd5b90600052602060002090600202016000915090508060000154908060010180546101b99061055d565b80601f01602080910402602001604051908101604052809291908181526020018280546101e59061055d565b80156102325780601f1061020757610100808354040283529160200191610232565b820191906000526020600020905b81548152906001019060200180831161021557829003601f168201915b5050505050905082565b6000819050919050565b61024f8161023c565b82525050565b600060208201905061026a6000830184610246565b92915050565b6000604051905090565b600080fd5b600080fd5b61028d8161023c565b811461029857600080fd5b50565b6000813590506102aa81610284565b92915050565b6000602082840312156102c6576102c561027a565b5b60006102d48482850161029b565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610330826102e7565b810181811067ffffffffffffffff8211171561034f5761034e6102f8565b5b80604052505050565b6000610362610270565b905061036e8282610327565b919050565b600067ffffffffffffffff82111561038e5761038d6102f8565b5b610397826102e7565b9050602081019050919050565b82818337600083830152505050565b60006103c66103c184610373565b610358565b9050828152602081018484840111156103e2576103e16102e2565b5b6103ed8482856103a4565b509392505050565b600082601f83011261040a576104096102dd565b5b813561041a8482602086016103b3565b91505092915050565b6000806040838503121561043a5761043961027a565b5b600083013567ffffffffffffffff8111156104585761045761027f565b5b610464858286016103f5565b92505060206104758582860161029b565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156104b957808201518184015260208101905061049e565b60008484015250505050565b60006104d08261047f565b6104da818561048a565b93506104ea81856020860161049b565b6104f3816102e7565b840191505092915050565b60006040820190506105136000830185610246565b818103602083015261052581846104c5565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061057557607f821691505b6020821081036105885761058761052e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026105f07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826105b3565b6105fa86836105b3565b95508019841693508086168417925050509392505050565b6000819050919050565b600061063761063261062d8461023c565b610612565b61023c565b9050919050565b6000819050919050565b6106518361061c565b61066561065d8261063e565b8484546105c0565b825550505050565b600090565b61067a61066d565b610685818484610648565b505050565b5b818110156106a95761069e600082610672565b60018101905061068b565b5050565b601f8211156106ee576106bf8161058e565b6106c8846105a3565b810160208510156106d7578190505b6106eb6106e3856105a3565b83018261068a565b50505b505050565b600082821c905092915050565b6000610711600019846008026106f3565b1980831691505092915050565b600061072a8383610700565b9150826002028217905092915050565b6107438261047f565b67ffffffffffffffff81111561075c5761075b6102f8565b5b610766825461055d565b6107718282856106ad565b600060209050601f8311600181146107a45760008415610792578287015190505b61079c858261071e565b865550610804565b601f1984166107b28661058e565b60005b828110156107da578489015182556001820191506020850194506020810190506107b5565b868310156107f757848901516107f3601f891682610700565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220ad94a3d57f6a38a9f948a990481abea28bb0e19fd7debdf87d08f5a133add13a64736f6c63430008120033",
        chainID: 5777
    }
    const signedTxResponse = await wallet.signTransaction(tx); 
    console.log('transacton response');
    console.log(signedTxResponse);  
}
main()
    .then(() => process.exit(0))
    .catch((error) => {
        console.error(error);
        process.exit(1);
    });